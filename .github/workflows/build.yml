name: Build cross compilers
'on':
  workflow_dispatch:
    inputs:
      release:
        description: Release tag and name
        required: true
      do_release:
        description: Create a release and upload files
        required: true
        default: false
        type: boolean
      updateExisting:
        description: Update existing release
        required: true
        default: true
        type: boolean
jobs:
  prepare:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload_url: '${{ steps.create_release.outputs.upload_url }}'
    steps:
      - name: Create release
        uses: ncipollo/release-action@v1
        id: create_release
        if: '${{ github.event.inputs.do_release }}'
        with:
          allowUpdates: '${{ github.event.inputs.updateExisting }}'
          tag: '${{ github.event.inputs.release }}'
          name: '${{ github.event.inputs.release }}'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
  compile:
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      contents: write
    continue-on-error: true
    strategy:
      matrix:
        target:
          - aarch64-linux-musl
          - aarch64_be-linux-musl
          - arm-linux-musleabi
          - arm-linux-musleabihf
          - armeb-linux-musleabi
          - armeb-linux-musleabihf
          - armel-linux-musleabi
          - armel-linux-musleabihf
          - armv5l-linux-musleabihf
          - armv7l-linux-musleabihf
          - armv7m-linux-musleabi
          - armv7r-linux-musleabihf
          - i486-linux-musl
          - i686-linux-musl
          - loongarch64-linux-musl
          - m68k-linux-musl
          - microblaze-linux-musl
          - microblazeel-linux-musl
          - mips-linux-musl
          - mips-linux-musln32sf
          - mips-linux-muslsf
          - mips64-linux-musl
          - mips64-linux-musln32
          - mips64-linux-musln32sf
          - mips64el-linux-musl
          - mips64el-linux-musln32
          - mips64el-linux-musln32sf
          - mipsel-linux-musl
          - mipsel-linux-musln32
          - mipsel-linux-musln32sf
          - mipsel-linux-muslsf
          - or1k-linux-musl
          - powerpc-linux-musl
          - powerpc-linux-muslsf
          - powerpc64-linux-musl
          - powerpc64le-linux-musl
          - powerpcle-linux-musl
          - powerpcle-linux-muslsf
          - riscv64-linux-musl
          - s390x-linux-musl
          - sh2-linux-musl
          - sh2-linux-muslfdpic
          - sh2eb-linux-musl
          - sh2eb-linux-muslfdpic
          - sh4-linux-musl
          - sh4eb-linux-musl
          - x86_64-linux-musl
          - x86_64-linux-muslx32
        repo:
          - richfelker/musl-cross-make
          - nginxui/pmmp-musl-cross-make
    env:
      TARGET: ${{ matrix.target }}
      REPO: ${{ matrix.repo == 'nginxui/pmmp-musl-cross-make' && 'pmmp/musl-cross-make' || matrix.repo }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Clone ${{ matrix.repo }}'
        run: 'git clone https://github.com/${{ matrix.repo }} mcm'

      - name: 'Build ${{ matrix.target }}'
        run: |-
          make -j4
          make install
          ls output
        working-directory: mcm

      - name: 'Package ${{ matrix.target }}'
        id: package
        run: |-
          tar -czvf ../output-${{ matrix.target }}.tar.gz output/
          echo "source_escaped=${REPO%%/*}_${REPO##*/}" >> $GITHUB_OUTPUT
        working-directory: mcm

      - id: upload-artifacts
        name: Upload artifacts
        if: '${{ success() }}'
        uses: cytopia/upload-artifact-retry-action@v0.1.7
        with:
          path: 'output-${{ matrix.target }}.tar.gz'
          name: '${{ matrix.target }}-${{ steps.package.outputs.source_escaped }}'

      - name: Rename artifact
        run: mv output-${{ matrix.target }}.tar.gz output-${{ matrix.target }}-${{ steps.package.outputs.source_escaped }}.tar.gz

      - id: upload-releases
        name: Upload to releases
        uses: ncipollo/release-action@v1
        if: '${{ github.event.inputs.do_release }}'
        with:
          allowUpdates: true
          tag: '${{ github.event.inputs.release }}'
          artifacts: 'output-${{ matrix.target }}*.tar.gz'
          artifactContentType: application/gzip
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

